// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

@import '../includes/lib';

/*

---- set
label
8px
-----------choices
label
8px
--choice
control
label
            2px
            msg
16px        4px
info        info
16px
--choice
control
label
            2px
            msg
16px        4px
info        info
---
24px
            msg     msg
            4px             16px
            info            info
set         ---     ---     ---
            24px    24px    24px


24px between

-----
msg
4px
info
-----

*/


// wrapper around the label and control
.mzp-c-choice {
    box-sizing: border-box;
    clear: left;
    margin-bottom: 0;
    margin-top: $line-height-shim; // other labels have a bit of line height, mock that here for better vertical spacing
    min-height: $check-height;
    overflow: hidden;
    padding-bottom: $field-v-spacing;
    position: relative;

    .mzp-c-choices & {
        padding-bottom: $label-v-spacing;
    }

    .mzp-c-choices.mzp-l-choices-inline & {
        display: inline-block;
        padding-right: $field-h-spacing;
        vertical-align: top;
    }
}

// label
.mzp-c-choice-label {
    @include bidi(((padding-left, #{$check-height + $spacing-sm}, padding-right, 0),));
    margin-bottom: 0;
    padding-top: 3px;
    padding-bottom: 0;
    vertical-align: top;

    &:before {
        display: block;
        left: $check-sprite-grid * 7 * -1; //todo bidi
        position: absolute;
        top: 0;
    }

    .mzp-c-choices & {
        font-weight: normal;
    }

    &.mzp-t-small {
        font-weight: normal;
    }
}

// control
.mzp-c-choice-control {
    &[type="checkbox"],
    &[type="radio"] {
        @include bidi(((left, 0, right, auto),));
        box-sizing: border-box;
        height: $check-height;
        opacity: 0;
        position: absolute;
        top: 0;
        width: $check-height;
        z-index: 1;
    }
}


// fake controls, created with background on labels positioned under transparent form controls

.mzp-c-choice-control[type="checkbox"] + .mzp-c-choice-label:before {
    content: url('/static/img/forms/check_sprite.svg');
}

.mzp-c-choice-control[type="radio"] + .mzp-c-choice-label:before {
    content: url('/static/img/forms/radio_sprite.svg');
}

.mzp-c-choice-control:hover + .mzp-c-choice-label:before {
    left: $check-sprite-grid * 6 * -1; //todo bidi
    top: $check-sprite-grid * 1 * -1; //todo bidi
}

.mzp-c-choice-control:focus + .mzp-c-choice-label:before {
    left: $check-sprite-grid * 5 * -1; //todo bidi
    top: $check-sprite-grid * 2 * -1; //todo bidi
}

.mzp-c-choice-control:checked + .mzp-c-choice-label:before {
    left: $check-sprite-grid * 4 * -1; //todo bidi
    top: $check-sprite-grid * 3 * -1; //todo bidi
}

.mzp-c-choice-control:checked:hover + .mzp-c-choice-label:before {
    left: $check-sprite-grid * 3 * -1; //todo bidi
    top: $check-sprite-grid * 4 * -1; //todo bidi
}

.mzp-c-choice-control:checked:focus + .mzp-c-choice-label:before {
    left: $check-sprite-grid * 2 * -1; //todo bidi
    top: $check-sprite-grid * 5 * -1; //todo bidi
}

/* -------------------------------------------------------------------------- */
// multiple choices together, with optional inline layout option
//
// the spacing on these involves maths because the margins don't collapse on fieldsets
// normally I'd just remove the bottom margin on the :last-child
// but with inline elements we can't know how many are on the last line to remove the bottom margin
// the maths is done with padding instead of margin so there's consistant behaviour no matter what element the class is applied to
// so we strip the margins off stuff

.mzp-c-choices {
    margin-bottom: 0;
    padding-bottom: $field-v-spacing - $label-v-spacing;
}
